points(N, biasm4.0, col="orange", pch=19, cex=0.7)
# lines(N, biasm4.3, type="b", col=4, lwd=1.5)
# points(N, biasm4.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, biasm6.ML, xlab=expression(italic(q)), ylim=c(0, 0.8), xlim=c(N[1], N[3]),
main=expression(italic(m)==6), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, biasm6.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2, labels = c(50, 100, 250))
#axis(2, cex.axis=2)
box()
lines(N, biasm6.0, type="b", col="orange", lwd=1.5)
points(N, biasm6.0, col="orange", pch=19, cex=0.7)
# lines(N, biasm6.3, type="b", col=4, lwd=1.5)
# points(N, biasm6.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, biasm10.ML, xlab=expression(italic(q)), ylim=c(0, 0.8), xlim=c(N[1], N[3]),
main=expression(italic(m)==10), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, biasm10.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2, labels = c(50, 100, 250))
axis(4, at=bias, cex.axis=2, labels = c(0.0, 0.4, 0.8))
box()
lines(N, biasm10.0, type="b", col="orange", lwd=1.5)
points(N, biasm10.0, col="orange", pch=19, cex=0.7)
# lines(N, biasm10.3, type="b", col=4, lwd=1.5)
# points(N, biasm10.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, covm4.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==4), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm4.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2, labels = c(50, 100, 250))
title(ylab="Empirical coverage", line=2, cex.lab=2.3)
#axis(2, cex.axis=2)
box()
lines(N, covm4.0, type="b", col="orange", lwd=1.5)
points(N, covm4.0, col="orange", pch=19, cex=0.7)
# lines(N, covm4.3, type="b", col=4, lwd=1.5)
# points(N, covm4.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
plot(N, covm6.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==6), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm6.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2, labels = c(50, 100, 250))
#axis(2, cex.axis=2)
box()
lines(N, covm6.0, type="b", col="orange", lwd=1.5)
points(N, covm6.0, col="orange", pch=19, cex=0.7)
# lines(N, covm6.3, type="b", col=4, lwd=1.5)
# points(N, covm6.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
plot(N, covm10.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==10), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm10.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2, labels = c(50, 100, 250))
axis(4, at=cov, cex.axis=2, labels=c(0,0.5,0.95))
box()
lines(N, covm10.0, type="b", col="orange", lwd=1.5)
points(N, covm10.0, col="orange", pch=19, cex=0.7)
# lines(N, covm10.3, type="b", col=4, lwd=1.5)
# points(N, covm10.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
legend("bottomleft", c(expression(italic(l)[italic(P)](psi)),
expression(italic(l)[widetilde(italic(M))](psi))), text.col = "black",
# expression(italic(l)[italic(M)^list("*")](psi)))
lty = c(1,1), col = c(6, "orange"), bty="n", lwd= c(1.5, 1.5), cex=2)
dev.off()
N <- c(50, 100, 250)
bias<-c(-0.2, 0.2, 0.56)
cov<-c(0,0.5,0.95)
biasm10.0<-c(-0.082, -0.104, -0.131)
biasm10.3<-c(-0.105, -0.196, -0.203)
biasm10.ML<-c(0.559, 0.442, 0.440)
biasm20.0<-c(-0.097, -0.110, -0.117)
biasm20.3<-c(-0.087, -0.077, -0.07)
biasm20.ML<-c(0.211, 0.189, 0.198)
biasm30.0<-c(-0.112, -0.116, -0.126)
biasm30.3<-c(-0.029, -0.028, -0.034)
biasm30.ML<-c(0.143, 0.148, 0.136)
covm10.0<-c(0.938, 0.910, 0.859)
covm10.3<-c(0.746, 0.642, 0.541)
covm10.ML<-c(0.782, 0.677, 0.498)
covm20.0<-c(0.904, 0.867, 0.760)
covm20.3<-c(0.883, 0.914, 0.884)
covm20.ML<-c(0.859, 0.808, 0.558)
covm30.0<-c(0.870, 0.820, 0.637)
covm30.3<-c(0.941, 0.95, 0.929)
covm30.ML<-c(0.880, 0.796, 0.609)
par(mfrow=c(2,3))
plot(N, biasm10.ML, xlab=expression(italic(q)), ylim=c(-0.21, 0.56), xlim=c(N[1], N[3]),
main=expression(italic(m)==10), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
title(ylab="Bias", line=2.3, cex.lab=2)
points(N, biasm10.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
box()
lines(N, biasm10.0, type="b", col="orange", lwd=1.5)
points(N, biasm10.0, col="orange", pch=19, cex=0.7)
lines(N, biasm10.3, type="b", col=4, lwd=1.5)
points(N, biasm10.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, biasm20.ML, xlab=expression(italic(q)), ylim=c(-0.21, 0.56), xlim=c(N[1], N[3]),
main=expression(italic(m)==20), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, biasm20.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
#axis(2, cex.axis=2)
box()
lines(N, biasm20.0, type="b", col="orange", lwd=1.5)
points(N, biasm20.0, col="orange", pch=19, cex=0.7)
lines(N, biasm20.3, type="b", col=4, lwd=1.5)
points(N, biasm20.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, biasm30.ML, xlab=expression(italic(q)), ylim=c(-0.21, 0.56), xlim=c(N[1], N[3]),
main=expression(italic(m)==30), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, biasm30.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
axis(4, at=bias, cex.axis=2, labels = c(-0.2, 0.2, 0.56))
box()
lines(N, biasm30.0, type="b", col="orange", lwd=1.5)
points(N, biasm30.0, col="orange", pch=19, cex=0.7)
lines(N, biasm30.3, type="b", col=4, lwd=1.5)
points(N, biasm30.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, covm10.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==10), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm10.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
title(ylab="Empirical coverage", line=2, cex.lab=2.3)
#axis(2, cex.axis=2)
box()
lines(N, covm10.0, type="b", col="orange", lwd=1.5)
points(N, covm10.0, col="orange", pch=19, cex=0.7)
lines(N, covm10.3, type="b", col=4, lwd=1.5)
points(N, covm10.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
plot(N, covm20.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==20), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm20.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
#axis(2, cex.axis=2)
box()
lines(N, covm20.0, type="b", col="orange", lwd=1.5)
points(N, covm20.0, col="orange", pch=19, cex=0.7)
lines(N, covm20.3, type="b", col=4, lwd=1.5)
points(N, covm20.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
plot(N, covm30.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==30), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm30.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
axis(4, at=cov, cex.axis=2, labels=c(0,0.5,0.95))
box()
lines(N, covm30.0, type="b", col="orange", lwd=1.5)
points(N, covm30.0, col="orange", pch=19, cex=0.7)
lines(N, covm30.3, type="b", col=4, lwd=1.5)
points(N, covm30.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
legend("bottomleft", c(expression(italic(l)[italic(P)](psi)),
expression(italic(l)[tilde(italic(M))](psi)),
expression(italic(l)[italic(M)^list("*")](psi))), text.col = "black",
lty = c(1,1,1), col = c(6, "orange", 4), bty="n", lwd= c(1.5, 1.5, 1.5), cex=2)
pdf("resMNAR.pdf", width = 9, height = 9/sqrt(2))
par(mfrow=c(2,3))
plot(N, biasm10.ML, xlab=expression(italic(q)), ylim=c(-0.21, 0.56), xlim=c(N[1], N[3]),
main=expression(italic(m)==10), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
title(ylab="Bias", line=2.3, cex.lab=2)
points(N, biasm10.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
box()
lines(N, biasm10.0, type="b", col="orange", lwd=1.5)
points(N, biasm10.0, col="orange", pch=19, cex=0.7)
lines(N, biasm10.3, type="b", col=4, lwd=1.5)
points(N, biasm10.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, biasm20.ML, xlab=expression(italic(q)), ylim=c(-0.21, 0.56), xlim=c(N[1], N[3]),
main=expression(italic(m)==20), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, biasm20.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
#axis(2, cex.axis=2)
box()
lines(N, biasm20.0, type="b", col="orange", lwd=1.5)
points(N, biasm20.0, col="orange", pch=19, cex=0.7)
lines(N, biasm20.3, type="b", col=4, lwd=1.5)
points(N, biasm20.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, biasm30.ML, xlab=expression(italic(q)), ylim=c(-0.21, 0.56), xlim=c(N[1], N[3]),
main=expression(italic(m)==30), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, biasm30.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
axis(4, at=bias, cex.axis=2, labels = c(-0.2, 0.2, 0.56))
box()
lines(N, biasm30.0, type="b", col="orange", lwd=1.5)
points(N, biasm30.0, col="orange", pch=19, cex=0.7)
lines(N, biasm30.3, type="b", col=4, lwd=1.5)
points(N, biasm30.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, covm10.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==10), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm10.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
title(ylab="Empirical coverage", line=2, cex.lab=2.3)
#axis(2, cex.axis=2)
box()
lines(N, covm10.0, type="b", col="orange", lwd=1.5)
points(N, covm10.0, col="orange", pch=19, cex=0.7)
lines(N, covm10.3, type="b", col=4, lwd=1.5)
points(N, covm10.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
plot(N, covm20.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==20), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm20.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
#axis(2, cex.axis=2)
box()
lines(N, covm20.0, type="b", col="orange", lwd=1.5)
points(N, covm20.0, col="orange", pch=19, cex=0.7)
lines(N, covm20.3, type="b", col=4, lwd=1.5)
points(N, covm20.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
plot(N, covm30.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==30), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm30.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
axis(4, at=cov, cex.axis=2, labels=c(0,0.5,0.95))
box()
lines(N, covm30.0, type="b", col="orange", lwd=1.5)
points(N, covm30.0, col="orange", pch=19, cex=0.7)
lines(N, covm30.3, type="b", col=4, lwd=1.5)
points(N, covm30.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
legend("bottomleft", c(expression(italic(l)[italic(P)](psi)),
expression(italic(l)[tilde(italic(M))](psi)),
expression(italic(l)[italic(M)^list("*")](psi))), text.col = "black",
lty = c(1,1,1), col = c(6, "orange", 4), bty="n", lwd= c(1.5, 1.5, 1.5), cex=2)
dev.off()
pdf("resMNAR.pdf", width = 9, height = 9/sqrt(2))
par(mfrow=c(2,3))
plot(N, biasm10.ML, xlab=expression(italic(q)), ylim=c(-0.21, 0.56), xlim=c(N[1], N[3]),
main=expression(italic(m)==10), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
title(ylab="Bias", line=2.3, cex.lab=2)
points(N, biasm10.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
box()
lines(N, biasm10.0, type="b", col="orange", lwd=1.5)
points(N, biasm10.0, col="orange", pch=19, cex=0.7)
lines(N, biasm10.3, type="b", col=4, lwd=1.5)
points(N, biasm10.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, biasm20.ML, xlab=expression(italic(q)), ylim=c(-0.21, 0.56), xlim=c(N[1], N[3]),
main=expression(italic(m)==20), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, biasm20.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
#axis(2, cex.axis=2)
box()
lines(N, biasm20.0, type="b", col="orange", lwd=1.5)
points(N, biasm20.0, col="orange", pch=19, cex=0.7)
lines(N, biasm20.3, type="b", col=4, lwd=1.5)
points(N, biasm20.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, biasm30.ML, xlab=expression(italic(q)), ylim=c(-0.21, 0.56), xlim=c(N[1], N[3]),
main=expression(italic(m)==30), ylab="", type="b", axes=F, col=6,
lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, biasm30.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
axis(4, at=bias, cex.axis=2, labels = c(-0.2, 0.2, 0.56))
box()
lines(N, biasm30.0, type="b", col="orange", lwd=1.5)
points(N, biasm30.0, col="orange", pch=19, cex=0.7)
lines(N, biasm30.3, type="b", col=4, lwd=1.5)
points(N, biasm30.3, col=4, pch=19, cex=0.7)
abline(h=0.0, lty="dotted", col=2, lwd=1.5)
plot(N, covm10.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==10), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm10.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
title(ylab="Empirical coverage", line=2, cex.lab=2.3)
#axis(2, cex.axis=2)
box()
lines(N, covm10.0, type="b", col="orange", lwd=1.5)
points(N, covm10.0, col="orange", pch=19, cex=0.7)
lines(N, covm10.3, type="b", col=4, lwd=1.5)
points(N, covm10.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
plot(N, covm20.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==20), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm20.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
#axis(2, cex.axis=2)
box()
lines(N, covm20.0, type="b", col="orange", lwd=1.5)
points(N, covm20.0, col="orange", pch=19, cex=0.7)
lines(N, covm20.3, type="b", col=4, lwd=1.5)
points(N, covm20.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
plot(N, covm30.ML, xlab=expression(italic(q)), ylim=c(0, 1), xlim=c(N[1], N[3]),
main=expression(italic(m)==30), ylab="",
type="b", axes=F, col=6, lwd=1.5, cex.main=2.5, cex.lab=2.3)
points(N, covm30.ML, col=6, pch=19, cex=0.7)
axis(1,at=N, cex.axis=2)
axis(4, at=cov, cex.axis=2, labels=c(0,0.5,0.95))
box()
lines(N, covm30.0, type="b", col="orange", lwd=1.5)
points(N, covm30.0, col="orange", pch=19, cex=0.7)
lines(N, covm30.3, type="b", col=4, lwd=1.5)
points(N, covm30.3, col=4, pch=19, cex=0.7)
abline(h=0.95, lty="dotted", col=2, lwd=1.5)
legend("bottomleft", c(expression(italic(l)[italic(P)](psi)),
expression(italic(l)[widetilde(italic(M))](psi)),
expression(italic(l)[widetilde(italic(M))^list("*")](psi))), text.col = "black",
lty = c(1,1,1), col = c(6, "orange", 4), bty="n", lwd= c(1.5, 1.5, 1.5), cex=2)
dev.off()
logitCDF_Tbeta0<-function(t,beta,beta0,n) {
pi=exp(beta)/(1+exp(beta))
s=1:(n-1)
T=sqrt(n*exp(beta0))*(log(s/(n-s))-beta0)/(1+exp(beta0))
T=c(-Inf,T,Inf)
a=(which(T<=t))-1
if(length(a)==0) exactCDF_T=0
else  exactCDF_T=sum(sapply(a, dbinom, n, pi))
exactCDF_T
}
# exact size
LOGexactSize_Tbeta0<-function(alpha=0.05,n,beta0=0,type=c("two-sided","one-sided_L",
"one-sided_R"))
{
if(type=="two-sided") {
lb=qnorm(alpha/2)
ub=-qnorm(alpha/2)
exactSizeT=1-logitCDF_Tbeta0(ub,beta=beta0,beta0=beta0,n=n)+
logitCDF_Tbeta0(lb,beta=beta0,beta0=beta0,n=n)
}
if(type=="one-sided_L") {
lb=qnorm(alpha)
exactSizeT=logitCDF_Tbeta0(lb,beta=beta0,beta0=beta0,n=n)
}
if(type=="one-sided_R") {
ub=-qnorm(alpha)
exactSizeT=1-logitCDF_Tbeta0(ub,beta=beta0,beta0=beta0,n=n)
}
return(exactSizeT)
}
#2) T(betahat, betahat; beta0)
# exact CDF
logitCDF_Tbetahat<-function(t,beta,beta0,n) {
pi=exp(beta)/(1+exp(beta))
s=1:(n-1)
T=sqrt((s*n-s^2)/n)*(log(s/(n-s))-beta0)
T=c(0,T,0)
a=(which(T<=t))-1
if(length(a)==0) exactCDF_T=0
else  exactCDF_T=sum(sapply(a, dbinom, n, pi))
exactCDF_T
}
# exact size
### T(betahat, betahat; beta0)
LOGexactSize_Tbetahat<-function(alpha=0.05,n,beta0=0,type=c("two-sided","one-sided_L","one-sided_R"))
{
if(type=="two-sided") {
lb=qnorm(alpha/2)
ub=-qnorm(alpha/2)
exactSizeT=1-logitCDF_Tbetahat(ub,beta=beta0,beta0=beta0,n=n)+
logitCDF_Tbetahat(lb,beta=beta0,beta0=beta0,n=n)
}
if(type=="one-sided_L") {
lb=qnorm(alpha)
exactSizeT=logitCDF_Tbetahat(lb,beta=beta0,beta0=beta0,n=n)
}
if(type=="one-sided_R") {
ub=-qnorm(alpha)
exactSizeT=1-logitCDF_Tbetahat(ub,beta=beta0,beta0=beta0,n=n)
}
return(exactSizeT)
}
#3) tildeT(betahat, beta0; beta0)
# exact CDF
logitCDF_tildeTbeta0<-function(t,beta,beta0,n) {
pi=exp(beta)/(1+exp(beta))
M=(exp(beta0)-1)/(2*sqrt(n*exp(beta0)))
V=1+(3*exp(2*beta0)-2*exp(beta0)+3)/(2*n*exp(beta0))
tstar<-t*V^.5+M
logitCDF_Tbeta0(tstar,beta=beta,beta0=beta0,n=n)
}
# exact size
LOGexactSize_tildeTbeta0<-function(alpha=0.05,n,beta0=0,type=c("two-sided","one-sided_L",
"one-sided_R"))
{
if(type=="two-sided") {
lb=qnorm(alpha/2)
ub=-qnorm(alpha/2)
exactSizeTtilde=1-logitCDF_tildeTbeta0(ub,beta=beta0,beta0=beta0,n=n)+
logitCDF_tildeTbeta0(lb,beta=beta0,beta0=beta0,n=n)
}
if(type=="one-sided_L") {
lb=qnorm(alpha)
exactSizeTtilde=logitCDF_tildeTbeta0(lb,beta=beta0,beta0=beta0,n=n)
}
if(type=="one-sided_R") {
ub=-qnorm(alpha)
exactSizeTtilde=1-logitCDF_tildeTbeta0(ub,beta=beta0,beta0=beta0,n=n)
}
return(exactSizeTtilde)
}
#4) tildeT(betahat, betahat; beta0)
# exact CDF
logitCDF_tildeTbetahat<-function(t,beta,beta0,n) {
pi=exp(beta)/(1+exp(beta))
pi0=exp(beta0)/(1+exp(beta0))
s=1:(n-1)
if((pi0-pi0^2)>1/(4*n)){
T=sqrt((s*n-s^2)/n)*(log(s/(n-s))-beta0)/(1-1/(4*n*(pi0-pi0^2)))^.5
}
else {
T=sqrt((s*n-s^2)/n)*(log(s/(n-s))-beta0)
}
T=c(0,T,0)
a=(which(T<=t))-1
if(length(a)==0) exactCDF_T=0
else  exactCDF_T=sum(sapply(a, dbinom, n, pi))
exactCDF_T
}
# exact size
LOGexactSize_tildeTbetahat<-function(alpha=0.05,n,beta0=0,type=c("two-sided","one-sided_L",
"one-sided_R"))
{
if(type=="two-sided") {
lb=qnorm(alpha/2)
ub=-qnorm(alpha/2)
exactSizeTtilde=1-logitCDF_tildeTbetahat(ub,beta=beta0,beta0=beta0,n=n)+
logitCDF_tildeTbetahat(lb,beta=beta0,beta0=beta0,n=n)
}
if(type=="one-sided_L") {
lb=qnorm(alpha)
exactSizeTtilde=logitCDF_tildeTbetahat(lb,beta=beta0,beta0=beta0,n=n)
}
if(type=="one-sided_R") {
ub=-qnorm(alpha)
exactSizeTtilde=1-logitCDF_tildeTbetahat(ub,beta=beta0,beta0=beta0,n=n)
}
return(exactSizeTtilde)
}
b0<-seq(-6,6,by=0.01)
a <- 0.05
n=128
par(mfrow=c(1,1))
plot(b0, sapply(b0, function(bb0) {
1-LOGexactSize_Tbeta0(alpha=a,n=n,beta0=bb0,type=c("two-sided"))
}), ylab = "Exact Coverage", type = "l", ylim = c(0.7, 1), sub=expression(italic(n)==128), main=expression(paste(italic(H)[0]:theta==theta[0], " vs ", italic(H)[1]:theta!=theta[0])), col=6, lty=1, xlab=expression(theta[0]), lwd=1.5, cex.sub=1.5)
abline(h = 1 - a, col=2, lty=2, lwd=1.5)
lines(b0, sapply(b0, function(bb0) {
1-LOGexactSize_tildeTbeta0(alpha=a,n=n,beta0=bb0,type=c("two-sided"))
}), type = "l", ylim = c(0.5, 1), col=4, lty=1, lwd=1.5)
legend("bottom", legend=c(expression(ring(italic(T))), expression(ring(italic(T))^(italic(ls)))), lty=c(1,1), col=c(6, 4), lwd=c(1.5,1.5), bty="n")
b0<-seq(-6,6,by=0.01)
a <- 0.05
n=128
par(mfrow=c(1,1))
plot(b0, sapply(b0, function(bb0) {
1-LOGexactSize_Tbeta0(alpha=a,n=n,beta0=bb0,type=c("two-sided"))
}), ylab = "Exact Coverage", type = "l", ylim = c(0.7, 1), sub=expression(italic(n)==128), main=expression(paste(italic(H)[0]:theta==theta[0], " vs ", italic(H)[1]:theta!=theta[0])), col=6, lty=1, xlab=expression(theta[0]), lwd=1.5, cex.sub=1.3)
abline(h = 1 - a, col=2, lty=2, lwd=1.5)
lines(b0, sapply(b0, function(bb0) {
1-LOGexactSize_tildeTbeta0(alpha=a,n=n,beta0=bb0,type=c("two-sided"))
}), type = "l", ylim = c(0.5, 1), col=4, lty=1, lwd=1.5)
legend("bottom", legend=c(expression(ring(italic(T))), expression(ring(italic(T))^(italic(ls)))), lty=c(1,1), col=c(6, 4), lwd=c(1.5,1.5), bty="n")
load("/Users/claudia/Documents/PhD/2nd year/UCL project/ztests_Claudia/clotting ex.RData")
qqML4 <- qqnorm(zML[4,])
qqBC4 <- qqnorm(zBC[4,])
par(mfrow=c(1,1))
setwd("~/Documents/PhD/3rd year/Thesis/PHD THESIS clo/Figures")
pdf("qq-clot.pdf", width = 7, height = 7/sqrt(2))
plot(qqML4, col = 6, ylab="", xlab="", main="Normal Q-Q plot", pch=6, cex.main=1.5)
title(xlab=expression(paste(italic(H)[0]: beta[4]==beta["04"])), cex.lab=1.5)
points(qqBC4, col = 4, pch=3)
abline(0,1)
legend("topleft", legend=c(expression(widehat(italic(T))^4), expression(paste(widehat(italic(T))^list(4,), "*"))), col=c(6,4), pch=c(6,3), bty="n", cex=1.5)
dev.off()
qqML4 <- qqnorm(zML[4,])
qqBC4 <- qqnorm(zBC[4,])
par(mfrow=c(1,1))
plot(qqML4, col = 6, ylab="", xlab="", main="Normal Q-Q plot", pch=6, cex.main=1.5)
title(xlab=expression(paste(italic(H)[0]: beta[4]==beta["04"])), cex.lab=1.5)
points(qqBC4, col = 4, pch=3)
abline(0,1)
legend("topleft", legend=c(expression(widehat(italic(T))^4), expression(paste(widehat(italic(T))^list(4,), "*"))), col=c(6,4), pch=c(6,3), bty="n", cex=1.5)
plot(qqML4, col = 6, ylab="", xlab="", main="Normal Q-Q plot", pch=6, cex.main=1.5)
title(xlab=expression(paste(italic(H)[0]: beta[4]==beta["04"])), cex.lab=1.5)
points(qqBC4, col = 4, pch=3)
abline(0,1)
legend("topleft", legend=c(expression(widehat(italic(T))^4), expression(paste(widehat(italic(T))^list(4,), "*"))), col=c(6,4), pch=c(6,3), bty="n", cex=1.5)
plot(qqML4, col = 6, ylab="", xlab="", main="Normal Q-Q plot", pch=6, cex.main=1.5)
title(xlab=expression(paste(italic(H)[0]: beta[4]==beta["04"])), cex.lab=1.5)
points(qqBC4, col = 4, pch=3)
abline(0,1)
legend("topleft", legend=c(expression(widehat(italic(T))^4), expression(paste(widehat(italic(T))^list(4,), "*"))), col=c(6,4), pch=c(6,3), bty="n", cex=1.5)
